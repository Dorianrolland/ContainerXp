name: runtime-lite
on: [workflow_dispatch, push]
jobs:
    build:
        runs-on: ubuntu-20.04
        if: "contains(github.event.head_commit.message, 'lite') || github.event_name == 'workflow_dispatch'"
        strategy:
            matrix:
                arch: [linux/arm64, linux/amd64]
        services:
          registry:
            image: registry:2
            ports:
              - 5000:5000
        steps:
        -   uses: actions/checkout@v2
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v1
            with:
                platforms: all
        -   name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1
            with:
                version: latest
                driver-opts: network=host
        -   name: Set up docker-slim
            run: |
                wget https://downloads.dockerslim.com/releases/1.34.0/dist_linux.tar.gz
                tar xzf dist_linux.tar.gz
                mv dist_linux docker-slim
        -   name: Login to DockerHub Registry
            run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        -   name: Build and push image
            run: |
                if [ ${{ matrix.arch }} == "linux/arm64" ]; then
                    docker buildx build --platform linux/arm64 --provenance false --sbom false -t dorianalp38/runtime-lite:latest_arm --push .
                else
                    docker buildx build --platform linux/amd64 --provenance false --sbom false -t dorianalp38/runtime-lite:latest_amd64 --push .
                fi

    manifest:
        runs-on: ubuntu-20.04
        needs: build
        steps:
        -   uses: actions/checkout@v2
        -   name: Login to DockerHub Registry
            run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        -   name: Update manifest for bigdft-lite to attach arm and x86_64 versions on a single image
            run: |
                export DOCKER_CLI_EXPERIMENTAL=enabled
                docker manifest create dorianalp38/runtime-lite:latest dorianalp38/runtime-lite:latest_arm dorianalp38/runtime-lite:latest_amd64
                docker manifest annotate dorianalp38/runtime-lite:latest dorianalp38/runtime-lite:latest_arm --arch arm64
                docker manifest annotate dorianalp38/runtime-lite:latest dorianalp38/runtime-lite:latest_amd64 --arch amd64
                docker manifest push --purge dorianalp38/runtime-lite:latest
