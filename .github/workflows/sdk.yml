name: sdk
on:
  push:
  workflow_dispatch:
    inputs:
      kind:
        description: 'type of launch'
        required: false
        default: 'manual'

jobs:
  build_sdk:
    strategy:
      matrix:
        mpi: [ompi]
        arch: [x86_64, arm, ppc64le]
        exclude:
          - mpi: mvapich
            arch: arm
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Get the tag and MPI version
        id: vars
        run: |
          source current_setup.sh
          echo ::set-output name=nompitag::$(echo ${BIGDFT_SYSTEM}${BIGDFT_SYSTEM_VERSION}_cuda${BIGDFT_CUDA_VERSION}_${{ matrix.arch }})
          if [ ${{ matrix.arch }} == "arm" ]; then
              echo ::set-output name=docker_platform::"linux/arm64"
          elif [ ${{ matrix.arch }} == "ppc64le" ]; then
              echo ::set-output name=docker_platform::"linux/ppc64le"
          else
              echo ::set-output name=docker_platform::"linux/amd64"
          fi
      - name: Build the tagged Docker image
        run: |
          docker buildx build --target sdk --platform ${{ steps.vars.outputs.docker_platform }} --file ./Dockerfiles/Dockerfile_sdk_${{ matrix.mpi }}_${{ matrix.arch }} --tag dorianal38p/sdk:${{steps.vars.outputs.nompitag}} --output "type=image, name=dorianal38p/sdk_sdk:CI,push=true" .

  manifest:
    runs-on: ubuntu-latest
    needs: build_sdk
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Create and Push Docker Manifest
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create dorianal38p/sdk:${{ needs.build_sdk.outputs.tag }} \
            $(echo "dorianal38p/sdk:${{ needs.build_sdk.outputs.tag }}_x86_64 dorianal38p/sdk:${{ needs.build_sdk.outputs.tag }}_arm dorianal38p/sdk:${{ needs.build_sdk.outputs.tag }}_ppc64le" | sed 's/ / dorianal38p/sdk:/g')
          docker manifest push dorianal38p/sdk:${{ needs.build_sdk.outputs.tag }}
