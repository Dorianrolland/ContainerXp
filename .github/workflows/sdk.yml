name: sdk
on:
  push:
  workflow_dispatch:
    inputs:
      kind:
        description: 'Type of launch'
        required: false
        default: 'manual'

jobs:
  build_sdk:
    strategy:
      matrix:
        mpi: [ompi]
        arch: [x86_64, arm64, ppc64le] # Assurez-vous d'utiliser 'arm64' pour les processeurs ARM 64 bits.
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build and push Docker images
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          image_tag=dorianalp38/sdk2:${{ matrix.mpi }}_${{ matrix.arch }}_${{ github.run_number }}_v2
          docker buildx build --platform ${{ matrix.arch }} --file Dockerfile --tag $image_tag --push .

  create_manifest:
    needs: build_sdk
    runs-on: ubuntu-20.04
    steps:
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Create and Push Multi-Arch Docker Manifest
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          manifest_tag=dorianalp38/sdk:centos7_cuda12.3.1_manifest_${{ github.run_number }}_v2
          docker manifest create $manifest_tag \
            dorianalp38/sdk2:ompi_x86_64_${{ github.run_number }}_v2 \
            dorianalp38/sdk2:ompi_arm64_${{ github.run_number }}_v2 \
            dorianalp38/sdk2:ompi_ppc64le_${{ github.run_number }}_v2
          docker manifest push $manifest_tag
